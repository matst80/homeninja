<html>
    <head>
      <script src="/mqtt.js"></script>
      <style>
          body {
              display: flex;
              padding:30px;
              background:linear-gradient(141deg, #0fb8ad 0%, #1fc8db 51%, #2cb5e8 75%)
          }
          .node {
            width:150px;
            height:80px;
            margin:10px;
            padding:10px;
            float:left;
            border:solid 1px rgba(255,255,255,0.4);
            background-color: rgba(255,255,255,0.4);
          }
          .itemlabel {
              margin-bottom:4px;
          }
          .button {
              display: inline-block;
              padding: 5px;
              background: green;
              text:#fff;
              margin-right: 5px;
          }
          .button.off {
              background: red;
          }
          div.off {
              background: rgba(0,0,0,0.4);
              border-color: rgba(0,0,0,0.5);
              color:#fff;
          }
          #evts {
              position: fixed;
              left:auto;
              right: 0;
              top:0;
              bottom:0;
              background: rgba(255,255,255,0.4);
              
              border:0;
              width: 200px;
          }
          #items {
              clear: both;
          }
      </style>
    </head>
    <body>
        <div id="items"></div>
        <textarea id="evts"></textarea>
      <script>
        var client = mqtt.connect();
        client.subscribe("#");
        //client.subscribe("homeninja/notify");
        var items = {};
        var evts = document.getElementById('evts');
        var itemParent = document.getElementById('items');

        function createOrUpdate(item) {
            var id = item.topic.replace('/','');
            var elm = document.getElementById(item.topic);
            
            if (!elm)
            {
                elm = document.createElement('div');
                var label = document.createElement('div');
                label.className = 'itemlabel';
                label.innerHTML = item.name;
                elm.appendChild(label);
                console.log(item);
                if (item.features.indexOf('onoff')!=-1) {
                    var on = document.createElement('span');
                    on.innerHTML = 'ON';
                    on.className = 'button';
                    elm.appendChild(on);
                    var off = document.createElement('span');
                    off.innerHTML = 'OFF';
                    off.className = 'button off';
                    elm.appendChild(off);
                    off.addEventListener('click',function() {
                        client.publish(item.topic+"/set","off");
                        elm.classList.add('off');
                    },true);
                    
                    on.addEventListener('click',function() {
                        client.publish(item.topic+"/set","on");
                        elm.classList.remove('off');
                    },true);
                }
                else if (item.features.indexOf("Dimmable light")!=-1) {
                    var slider = document.createElement('input');
                    slider.val = 0;
                    slider.min = 0;
                    slider.max = 100;
                    slider.type = 'range';
                    elm.appendChild(slider);
                    slider.addEventListener('change',function() {
                        client.publish(item.topic+"/set",slider.value+'');
                    });
                }
                
                elm.className = 'node off';
                elm.id = item.topic;
                itemParent.appendChild(elm);
            }
        }

        function parseStates(s) {
            for(i in s) {
                var item = s[i];
                console.log(item);
                createOrUpdate(item);
            }
        }

        client.on("message", function(topic, payload) {
            if (topic=="homeninja/clientadded") {
                console.log('client added',payload);
                
                var obj = JSON.parse(payload);
                parseStates(obj.nodes);
                console.log(obj);
            }
            else if (topic=="homeninja/notify"){
                alert(payload);
            }
            else {
                evts.value+=([topic, payload].join(": "))+'\n';
            }
            
        });

        var serverNode = {
            features:['webgui','notification'],
            name:'this webserver',
            topic:'homeninja/serverweb'
        };
  
        client.publish("homeninja/init", JSON.stringify(serverNode));
      </script>
    </body>
  </html>
